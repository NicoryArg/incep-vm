; ------------------------------------------------------------------------------
; Purpose: PHP-FPM pool for WordPress (container-to-container via TCP :9000)
;
; Cheat sheet:
; - [www]                  : default pool name
; - listen = 0.0.0.0:9000 : listen on TCP (so NGINX container can reach it)
; - user/group             : must match file ownership in /var/www/wordpress
; - pm = dynamic           : spawn workers as needed
; - clear_env = no         : allow Docker env vars inside PHP (needed by WP CLI)
; - catch_workers_output   : route PHP stdout/stderr to container logs
; ------------------------------------------------------------------------------

[www]                                  ; default pool name (keep as 'www')

; --- How NGINX talks to PHP-FPM ----------------------------------------------
listen = 0.0.0.0:9000                  ; TCP listener (NOT a unix socket)

; --- Runtime user/group for PHP-FPM workers ----------------------------------
; I used 'nobody:nogroup' in entrypoint ownership; match that here.
user = nobody
group = nogroup

; --- Process manager ----------------------------------------------------------
pm = dynamic                           ; good default for web workloads
pm.max_children = 10                   ; max workers (tune for RAM/CPU)
pm.start_servers = 2                   ; start this many at boot
pm.min_spare_servers = 2               ; keep at least this many idle
pm.max_spare_servers = 5               ; cap idle workers

; --- Environment and logging --------------------------------------------------
clear_env = no                         ; allow env vars from Docker (.env)
catch_workers_output = yes             ; send worker stdout/stderr to logs

; Optional: make PHP errors go to container stderr (visible in docker logs)
;php_admin_value[error_log] = /proc/self/fd/2
;php_admin_flag[log_errors] = on

; Optional: production-friendly defaults (can toggle during debugging)
; php_admin_flag[display_errors] = off
; php_admin_value[memory_limit] = 256M
; php_admin_value[upload_max_filesize] = 64M
; php_admin_value[post_max_size] = 64M
; php_admin_value[max_execution_time] = 120

; --- Security & timeouts ------------------------------------------------------
; Limit request execution time at FPM level (Nginx has fastcgi_read_timeout too)
; request_terminate_timeout = 300s

; --- Path info handling (WordPress-friendly defaults) ------------------------
; Let Nginx set SCRIPT_FILENAME; no need to change here.
; security.limit_extensions keeps execution to .php by default.
