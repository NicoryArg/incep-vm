# ------------------------------------------------------------------------------
# Purpose: Serve WordPress via PHP-FPM over HTTPS (HTTP/2) inside Docker
#
# Cheat sheet:
# - worker_processes auto;              : match workers to available CPU cores
# - events { worker_connections 1024; } : max concurrent connections per worker
# - http { ... }                        : global HTTP config (MIME, I/O)
# - include mime.types;                 : map file extensions to MIME types
# - default_type application/octet-stream; : fallback MIME when unknown
# - sendfile on;                        : efficient zero-copy static file I/O
# - server { listen 443 ssl http2; }    : HTTPS virtual host (HTTP/2 enabled)
# - server_name _;                      : default/catch-all vhost
# - ssl_certificate / ssl_certificate_key : self-signed cert/key paths
# - ssl_protocols TLSv1.2 TLSv1.3;      : allow only modern TLS versions
# - root /var/www/wordpress;            : WordPress docroot (Docker volume)
# - index index.php index.html;         : prefer PHP front controller
# - client_max_body_size 64m;           : allow larger WP uploads
# - location / { try_files ... }        : WP front controller routing
# - location ~ \.php$ { fastcgi_* }     : send PHP to PHP-FPM (wordpress:9000)
# - basic hardening (deny ini/sh/sql/log): block sensitive files
# ------------------------------------------------------------------------------

worker_processes auto;                # use one worker per CPU core
events { worker_connections 1024; }   # per-worker connection cap

http {
  include         mime.types;         # map extensions to MIME types
  default_type    application/octet-stream;  # default when no MIME match
  sendfile        on;                 # zero-copy send for static files

  server {
    listen 443 ssl http2;             # HTTPS endpoint with HTTP/2
    server_name _;                    # default/catch-all server block

    # --- TLS: self-signed cert and key (generated during image build) ---
    ssl_certificate         /etc/nginx/ssl/cert.pem;  # certificate (public)
    ssl_certificate_key     /etc/nginx/ssl/key.pem;   # private key
    ssl_protocols           TLSv1.2 TLSv1.3;          # modern TLS only
    ssl_prefer_server_ciphers on;                     # use server cipher order

    # --- Document root & directory index (WordPress front controller first) ---
    root  /var/www/wordpress;         # WordPress files mounted here
    index index.php index.html;       # prioritize PHP index

    client_max_body_size 64m;         # allow larger media uploads via WP

    # --- Main routing: static if present, else hand to WordPress index.php ---
    location / {
      # try in order: exact file -> directory index -> WP front controller
      try_files $uri $uri/ /index.php?$args;
    }

    # --- PHP handling: forward *.php to PHP-FPM in the 'wordpress' service ---
    location ~ \.php$ {
      include fastcgi_params;                          # base FastCGI params
      fastcgi_pass wordpress:9000;                     # PHP-FPM upstream
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; # target script
      fastcgi_read_timeout 300;                        # allow long-running ops
    }

    # --- Basic hardening: block direct fetches of sensitive file types ---
    location ~* \.(ini|sh|sql|log)$ { deny all; }      # never serve these
  }
}
